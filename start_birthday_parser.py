#!/usr/bin/env python3
"""
üéÇ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞ "–ü–æ–¥–∞—Ä–∏ –ø–µ—Å–Ω—é"

–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.
"""

import sys
import os
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def print_banner():
    """–í—ã–≤–æ–¥ –±–∞–Ω–Ω–µ—Ä–∞"""
    print("üéÇ" * 50)
    print("üéÇ VK Birthday Parser –¥–ª—è –±–æ—Ç–∞ '–ü–æ–¥–∞—Ä–∏ –ø–µ—Å–Ω—é'")
    print("üéÇ" * 50)
    print()

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        from config import VK_TOKEN, VK_USER_TOKEN, BOT_LINK
        
        if not VK_TOKEN:
            print("‚ùå VK_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞ https://vkhost.github.io/")
            return False
        else:
            print("‚úÖ VK_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
        if not VK_USER_TOKEN:
            print("‚ö†Ô∏è  VK_USER_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å)")
            print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ https://vkhost.github.io/")
        else:
            print("‚úÖ VK_USER_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
        print(f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: {BOT_LINK}")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def run_single_parse():
    """–ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    print("üîç –ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞...")
    
    try:
        from improved_vk_parser import ImprovedVKParser
        
        parser = ImprovedVKParser()
        processed_count, messages_sent = parser.process_birthday_users()
        
        print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞:")
        print(f"   üë• –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {processed_count}")
        print(f"   üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_sent}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")

def run_scheduler():
    """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    print("   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("   –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 09:00, 12:00, 18:00, 21:00")
    print("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print()
    
    try:
        from improved_scheduler import ImprovedBirthdayScheduler
        
        scheduler = ImprovedBirthdayScheduler()
        scheduler.run()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    print("üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print()
    print("1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:")
    print("   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env_example.txt –≤ .env")
    print("   - –ü–æ–ª—É—á–∏—Ç–µ VK —Ç–æ–∫–µ–Ω—ã –Ω–∞ https://vkhost.github.io/")
    print("   - –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env")
    print()
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    print("   pip install -r requirements.txt")
    print()
    print("3. –ó–∞–ø—É—Å–∫:")
    print("   python start_birthday_parser.py")
    print()
    print("4. –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã:")
    print("   1 - –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥")
    print("   2 - –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    print("   3 - –°–ø—Ä–∞–≤–∫–∞")
    print("   4 - –í—ã—Ö–æ–¥")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not check_config():
        print("\n‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
        print("   –°–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∞–π–ª env_example.txt –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
        return
    
    print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
    print("1. üîç –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥")
    print("2. ‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
    print("3. üìñ –°–ø—Ä–∞–≤–∫–∞")
    print("4. ‚ùå –í—ã—Ö–æ–¥")
    
    while True:
        try:
            choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
            
            if choice == '1':
                run_single_parse()
                break
            elif choice == '2':
                run_scheduler()
                break
            elif choice == '3':
                show_help()
                print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")
                print("1. üîç –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥")
                print("2. ‚è∞ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
                print("3. üìñ –°–ø—Ä–∞–≤–∫–∞")
                print("4. ‚ùå –í—ã—Ö–æ–¥")
            elif choice == '4':
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()